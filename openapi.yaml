openapi: 3.0.3
info:
  title: hackathon-voronezh
  version: 1.0.0
servers:
  - url: http://91.142.72.178:5000/
paths:
  /registration:
    post:
      summary: Add a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                description: userKey
                type: string
        '405':
          description: Invalid input
  /auth:
    post:
      summary: Auth user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuth'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                description: userKey
                type: string
        '405':
          description: Invalid input
  /user:
    get:
      summary: get user info
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                description: userKey
                type: string
        '405':
          description: Invalid input
          
  /events:
    get:
      summary: get events for this user
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '405':
          description: Invalid input
          
  /event:
    post:
      summary: post event
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
          
  /confirmEvent:
    post:
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
        - name: eventId
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '405':
          description: Invalid input
          
  /sportsman/info:
    get:
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sportsman'
        '405':
          description: Invalid input
    post:
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sportsman'
        '405':
          description: Invalid input
          
  /representative/info:
    get:
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
        '405':
          description: Invalid input
          
  /partner/info:
    get:
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '405':
          description: Invalid input
          
  /event/analytics:
    get:
      parameters:
        - name: userKey
          in: header
          required: true
          schema:
            type: string
        - name: eventId
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
        '405':
          description: Invalid input
    

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        login:
          type: string
        telephone:
          type: string
        password:
          type: string
          format: password
        name:
          type: string
    UserRole:
      type: string
      enum:
        - none
        - sportsman
        - representative
        - administrator
        - partner
    Sex:
      type: string
      enum:
        - m
        - f
    EventStatus:
      type: string
      enum:
        - completed
        - now
        - upcoming
    UserAuth:
      type: object
      properties:
        mail:
          type: string
        password:
          type: string
          format: password
    Event:
      type: object
      properties:
        id:
          type: string
        creator:
          $ref: '#/components/schemas/User'
        members:
          type: array
          items:
            $ref: '#/components/schemas/EventMember'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/EventStatus'
        criterions:
          type: array
          items:
            type: string
    EventMember:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        position:
          type: integer
        score:
          type: number
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        mail:
          type: string
        phone:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
    Passport:
      type: object
      properties:
        number:
          type: string
        nameOwner:
          type: string
        companyName:
          type: string
        issueDate: 
          type: string
        companyCode: 
          type: string
        birthplace: 
          type: string
    Sportsman:
      type: object
      properties:
        birthday:
          type: string
          format: date
        sex:
          $ref: '#/components/schemas/Sex'
        passport:
          $ref: '#/components/schemas/Passport'
        oms:
          type: string
    Representative:
      type: object
      properties:
        region:
          type: string
    Partner:
      type: object
      properties:
        companyName:
          type: string
    RatingPosition:
      type: object
      properties:
        name:
          type: string
        points:
          type: integer
        whatLiked:
          type: string
        whatUnliked:
          type: string
    Rating:
      type: object
      properties:
        eventId:
          type: string
        rating:
          $ref: '#/components/schemas/RatingPosition'